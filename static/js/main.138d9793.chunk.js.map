{"version":3,"sources":["request.js","axios.js","Row.js","Banner.js","Nav.js","Footer.js","App.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchMovie","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","response","data","results","fetchData","handleClick","movie","id","trailerurl","key","className","map","onClick","src","poster_path","backdrop_path","alt","name","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","Math","floor","random","length","console","log","style","backgroundSize","backgroundImage","backgroundPosition","class","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.138d9793.chunk.js","sourcesContent":["const API_KEY = \"03e40b00c7d87e8afb28578d61c841bf\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;","import axios from \"axios\"\r\n const instance = axios.create({\r\n     baseURL:\"https://api.themoviedb.org/3\"\r\n });\r\n\r\n export default instance;","import React, { useState, useEffect } from 'react';\r\nimport axios from \"./axios\"\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\n\r\n\r\nconst baseURL = \"https://image.tmdb.org/t/p/original\";\r\n\r\nconst Row = ({ title, fetchMovie,isLargeRow }) => {\r\n    const [movies, setMovies] = useState([])\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await axios.get(fetchMovie)\r\n            setMovies(response.data.results)\r\n            return response\r\n        }\r\n        fetchData()\r\n\r\n    }, [fetchMovie])\r\n\r\n\r\n    // console.log(movies)\r\n    const opts = {\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars:{\r\n            autoplay:1,\r\n        },\r\n        \r\n    }\r\n\r\n    \r\n\r\n    const handleClick = async (movie) => {\r\n        if (trailerUrl) {\r\n          setTrailerUrl(\"\");\r\n        } else {\r\n          let trailerurl = await axios.get(\r\n            `/movie/${movie.id}/videos?api_key=fb34530271b349314af0de263d16ab5a`\r\n          );\r\n          setTrailerUrl(trailerurl.data.results[0]?.key);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h3 className=\"title\">{title}</h3>\r\n            <div className=\"row_posters\">\r\n                {movies.map((movie) => {\r\n                    return (     \r\n                        <img onClick={()=> handleClick(movie)} key={movie.id} className={`row_poster ${isLargeRow && \"row_posterLarger\"}`} src={`${baseURL}${isLargeRow ? movie.poster_path: movie.backdrop_path}`} alt={movie.name}></img>\r\n                    )\r\n\r\n                })}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;\r\n","import React, { useState, useEffect } from 'react'\r\nimport \"./Banner.css\"\r\nimport axios from \"./axios\"\r\nimport requests from './request'\r\nconst baseURL = \"https://image.tmdb.org/t/p/original\";\r\n\r\nconst Banner = () => {\r\n    const [movie, setMovie] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await axios.get(requests.fetchNetflixOriginals)\r\n            setMovie(\r\n                response.data.results[\r\n                Math.floor(Math.random() * response.data.results.length - 1)]\r\n            )\r\n            return response\r\n        }\r\n        fetchData()\r\n    }, [])\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n      }\r\n    console.log(movie)\r\n    return (\r\n        <header className=\"banner\" style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(${baseURL}${movie?.poster_path})`,\r\n            backgroundPosition: \"center center\"\r\n        }}>\r\n            <div className=\"banner_content\">\r\n                <h1 className=\"banner_title\">{movie?.name || movie?.title}</h1>\r\n\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Add</button>\r\n                    <button className=\"banner_button\">List</button>\r\n\r\n                </div>\r\n                <h1 class=\"banner_discription\">{truncate(movie?.overview, 200)}\r\n                </h1>\r\n            </div>\r\n            <div className=\"banner--fadeBottom\"/>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React,{useEffect,useState} from 'react'\r\nimport \"./Nav.css\"\r\n\r\nconst Nav = () => {\r\n    const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else {\r\n        handleShow(false);\r\n      }\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav_black\"} `}>\r\n            <img\r\n                className=\"nav_logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\r\n                alt=\"Netflix Logo\"\r\n            />\r\n            <img\r\n                className=\"nav_avatar\"\r\n                src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n                alt=\"Avatar\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport \"./Footer.css\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"Footer\">\r\n            <h5>Design By Saman Aggarwal</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\nimport './App.css';\nimport requests from './request';\nimport Row from './Row';\nimport Banner from './Banner';\nimport Nav from \"./Nav\"\nimport Footer from \"./Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Nav/>\n    <Banner/>\n    <Row title=\"NetflixOriginals\" fetchMovie={requests.fetchNetflixOriginals} isLargeRow/>\n    <Row title=\"Trending\" fetchMovie={requests.fetchTrending}/>\n    <Row title=\"TopRated\" fetchMovie={requests.fetchTopRated}/>\n    <Row title=\"Action Movies\" fetchMovie={requests.fetchActionMovies}/>\n    <Row title=\"Comedy Movies\" fetchMovie={requests.fetchComedyMovies}/>\n    <Row title=\"Horror Movies\" fetchMovie={requests.fetchHorrorMovies}/>\n    <Row title=\"Romance Movies\" fetchMovie={requests.fetchRomanceMovies}/>\n    <Row title=\"Documentaries\" fetchMovie={requests.fetchDocumentaries}/>\n    <Footer/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}